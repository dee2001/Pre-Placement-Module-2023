Skip to content
mohd1923me1022
/
Pre-Placement-Module-2023
Public
forked from rohan-khurana/Pre-Placement-Module-2023
Code
Pull requests
Actions
Projects
Wiki
Security
More
Pre-Placement-Module-2023/DS I/Day 12/1
@mohd1923me1022
mohd1923me1022 Create 1
 History
 1 contributor
59 lines (59 sloc)  1.18 KB
Skip to content
cheater108
/
Pre-Placement-Module-2023
Public
forked from rohan-khurana/Pre-Placement-Module-2023
Code
Pull requests
Actions
Projects
Wiki
Security
More
Pre-Placement-Module-2023/DS I/Day 12/Invert_Binary_Tree.cpp
@cheater108
cheater108 Create Invert_Binary_Tree.cpp
 History
 1 contributor
25 lines (25 sloc)  714 Bytes
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root == nullptr){
            return nullptr;
        }
        TreeNode* temp = root->left;
        root->left = root->right;
        root->right = temp;
        TreeNode* t = invertTree(root->left);
        TreeNode* s = invertTree(root->right);
        return root;
    }
};
Footer
© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You have no unread notifications
Footer
© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
You have no unread notifications
